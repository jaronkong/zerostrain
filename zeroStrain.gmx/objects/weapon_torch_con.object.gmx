<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>weaponControllerPar</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup

name = "Plasma Torch";
gene += "torch";
weaponType = WEAPON_TYPE.BLUE;

//Remember to set the particle def script in the step
fireRate = room_speed / 10;
fireSpread = 80;
fireRange = 500;
edgePercent = 0.5;

damage = 100;

hitForce = 0.5;
kickAmount = 0;
kickForce = 0;

pickupColor[ 0 ] = make_color_rgb( 0, 150, 255 );
pickupColor[ 1 ] = make_color_rgb( 150, 100, 155 );

pickupColor[ 2 ] = make_color_rgb( 200, 200, 255 );
pickupColor[ 3 ] = make_color_rgb( 10, 10, 255 );

bloom_attachParticleSystem( system1, BLOOM_DEPTH );
distortionGlow_attachParticleSystem( system1 );
refraction_attachParticleSystem( system1 );
dispersion_attachParticleSystem( system1 );

part_system_automatic_draw( system1, true );

soundStarted = false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Duration over

//Delay before destroying so can clear out particles.
active = false;
alarm[ 1 ] = 120;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Effect definition

particleDef_torch();

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Firing
if ( !active ) {
    exit;
}

var t = global.timeTickFactor;
var ti = 1/t;

if ( firing ) {
    if ( instance_exists( owner ) ) {
        if ( !soundStarted ) {
            audio_sound_gain( torchBurn_sd, 1, 0 );
            playSound( torchBurn_sd, 1, false );
            soundStarted = true;
        }
        var tBaseX = owner.x;
        var tBaseY = owner.y;
        var tOwnerDir = owner.aimDir;
        
        repeat( 3 ) {
            var tRandDist = random( fireRange - ( fireRange * edgePercent ) );
            var tRandAngle = random( fireSpread );
            var tX = tBaseX + lengthdir_x( tRandDist, owner.aimDir - fireSpread/2 + tRandAngle );
            var tY = tBaseY + lengthdir_y( tRandDist, owner.aimDir - fireSpread/2 + tRandAngle );
            var tAngle = point_direction( tBaseX, tBaseY, tX, tY );
            
            part_type_direction(getParticle( "torchCore" ),tAngle,tAngle,0 *t,0 *t);
            part_type_direction(getParticle( "torchCore2" ),tAngle - 10, tAngle +10, 0 *t,0 *t);
            part_type_direction(getParticle( "torchCore3" ),tAngle - 10, tAngle +10, 0 *t,0 *t);
            
            part_particles_create( system1, tX, tY, getParticle( "torchCore" ), 1 );
            part_particles_create( system1, tX, tY, getParticle( "torchCore2" ), 1 );
            part_particles_create( system1, tX, tY, getParticle( "torchCore3" ), 2 );
        }
        
        
    
    }
}
else {
    soundStarted = false;
    audio_sound_gain( torchBurn_sd, 0, 100 );
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Tick damage
if ( !active ) {
    exit;
}

var t = global.timeTickFactor;
var ti = 1/t;

//---------------------------------------------
// Check for damage
//---------------------------------------------
if ( instance_exists( owner ) ) {
    var tBaseX = owner.x;
    var tBaseY = owner.y;
    var tOwnerDir = owner.aimDir;
    
    with ( enemyPar ) {
        var tAngle = point_direction( tBaseX, tBaseY, x, y );
        if ( abs(angle_difference( point_direction( tBaseX, tBaseY, x, y ),tOwnerDir )) &lt; other.fireSpread/2 
                &amp;&amp; point_distance( tBaseX, tBaseY, x, y ) &lt; other.fireRange ) {
    
            part_type_direction(getParticle( "torchBurn" ),tAngle - 5, tAngle +5, 0 *t,0 *t);
            part_type_direction(getParticle( "torchBurn2" ),tAngle - 80, tAngle +80, 0 *t,0 *t);
            
            part_particles_create( other.system1, x, y, getParticle( "torchBurn" ), 10 );
            part_particles_create( other.system1, x, y, getParticle( "torchBurn2" ), 20 );
            
            weaponDoDamage( id, other.id );
        }
                                
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw tracer

if ( firing ) {
    draw_set_color( c_lime );
    draw_circle( owner.x, owner.y, fireRange , true )
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
