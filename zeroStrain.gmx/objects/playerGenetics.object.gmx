<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Define player's genome

tag = "player";
owner = noone;

length = 128;
genome = geneGenerateGroupedQuality( tag, length, 0 );

effects = ds_map_create( );
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Define collected pickups

pickupCount = 0;
pickup = false;
pickupQuality = false;

pickupCountMax = 5;

pickupOffset = 0;

var tBacking = genePickupBacking_spr;
pickupScale = 0.75;
pickupBaseX = 64;
pickupBaseY = ( pickupScale * ( sprite_get_height( tBacking ) - sprite_get_yoffset( tBacking ) ) );
pickupSpace = ( pickupScale * sprite_get_width( tBacking ) );

pickupPromptTime = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Debug free genome

repeat ( 0 ) {
    pickupQuality[pickupCount] = random( 1 );
    pickup[pickupCount] = geneGenerateGroupedQuality(
        tag, length, pickupQuality[pickupCount]
    );
    pickupCount += 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy effects map

ds_map_destroy( effects );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Cap number of held genomes

pickupOffset = lerpDT( pickupOffset, 0, 0.02, global.timeTickFactor );

while ( pickupCount &gt; pickupCountMax ) {
    for ( var i = 1; i &lt; pickupCount; ++i ) {
        pickup[i-1] = pickup[i];
        pickupQuality[i-1] = pickupQuality[i];
    }
    pickupCount -= 1;
    
    var px = ( pickupBaseX + ( ( pickupCount - pickupOffset ) * pickupSpace ) );
    createScreenDNAPop( px, ( view_hview - pickupBaseY ) );
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Toggle merge menu

if ( !instance_exists( mergeMenu ) ) {
    var tOpen = keyboard_check_pressed( vk_space );
    if ( gamepad_is_connected( 0 ) ) {
        if ( gamepad_button_check_pressed( 0, gp_shoulderrb )
            || gamepad_button_check_pressed( 0, gp_shoulderlb ) ) 
        {
            tOpen = true;
        }
    }
    if ( tOpen ) {
        with ( instance_create( x, y, mergeMenu ) ) {
            geneBase = other.genome;
            length = other.length;
            geneOptionCount = other.pickupCount;
            for ( var i = 0; i &lt; geneOptionCount; ++i ) {
                geneOption[geneOptionCount-i-1] = other.pickup[i];
                geneOptionQuality[geneOptionCount-i-1] = other.pickupQuality[i];
            }
            event_user( 0 );
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>425</id>
        <kind>4</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Show merge ready message

if ( pickupCount &gt; 0 ) {
    pickupPromptTime -= global.timeTickFactor;
    if ( pickupPromptTime &lt; 0 ) {
        pickupPromptTime += 90;
        with ( instance_create( x, y, splashBanner ) ) {
            text = "DNA acquired#RT to merge";
            posY = 0.8;
        }
    }
} else pickupPromptTime = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Recompute effects

ds_map_destroy( effects );
effects = geneComputeEffects( tag, genome, length );
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Apply effects

with ( playerShip ) event_user( 1 );
with ( weaponSpawner ) event_user( 1 );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw collected genes

var px = ( view_xview + pickupBaseX );
var py = ( view_yview + view_hview - pickupBaseY );

var tScale = pickupScale;
var tSpace = pickupSpace;

//Draw backing
for ( var i = -1; i &lt; ( pickupCountMax + 1 ); ++i ) {
    var tIndex = 0;
    if ( i == pickupCountMax ) tIndex = 1;
    draw_sprite_ext( genePickupBacking_spr, tIndex,
        ( px + ( ( i - 0.8 ) * tSpace ) ), py,
        tScale, tScale, 0, c_white, 1
    );
}

//Draw genomes
for ( var i = 0; i &lt; pickupCount; ++i ) {
    var tOffset = pickupOffset;
    if ( i == 0 ) tOffset *= 2;
    geneDrawIcon(
        ( px + ( ( i - tOffset ) * tSpace ) ), py,
        tScale, 30, pickupQuality[pickupCount - i - 1]
    );
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
