<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Define genomes

label = "player";

geneBase = false;

geneOption = false;
geneOptionCount = 0;

length = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Define base strand

base[0] = noone;
base[1] = noone;

baseDesc = -1
baseInfo = false;
baseInfoCount = 0;

//Move here if no input
baseNeutralX = -0.2;
baseNeutralY = 0.5

//Current state
basePos = instance_create( 0, 0, mergeMenuInput );
baseX = 0;
baseY = 0;

baseTwist = 5;
baseSplit = -16;
baseInfoScale = 1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Define option strands

optionCurrent = 0;
optionCount = 0;

option = false;

optionPos = instance_create( 0, 0, mergeMenuInput );
with ( optionPos ) {
    inHorizontal = gp_axisrh;
    inVertical = gp_axisrv;
    inUp = vk_up;
    inDown = vk_down;
    inLeft = vk_left;
    inRight = vk_right;
    inFlipH = true;
}
optionX = 0;
optionY = 0;

optionTwist = 5;
optionSplit = -16;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Define state

stateLocked = false;
stateMerging = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Clear base strand objects

for ( var i = 0; i &lt; 2; ++i ) {
    with ( base[i] ) instance_destroy( );
}

for ( var i = 0; i &lt; baseInfoCount; ++i ) {
    with ( baseInfo[i] ) instance_destroy( );
}
if ( ds_exists( baseDesc, ds_type_grid ) ) ds_grid_destroy( baseDesc );

with ( basePos ) instance_destroy( );
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Clear option strand objects

for ( var i = 0; i &lt; optionCount; ++i ) {
    for ( var j = 0; j &lt; 2; ++j ) {
        with ( option[i, j] ) instance_destroy( );
    }
}

with ( optionPos ) instance_destroy( );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Base strand info fade out

var t = global.timeTickFactor;

var tAlpha = 1;
if ( basePos.x &gt; 0.3 ) tAlpha = 0;
for ( var i = 0; i &lt; baseInfoCount; ++i ) {
    baseInfo[i].image_alpha = lerpDT( baseInfo[i].image_alpha, tAlpha, 0.0875, t );
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Trigger merge animation

if ( !stateMerging ) {
    if ( ( basePos.x &gt; 0.75 ) &amp;&amp; ( optionPos.x &gt; 0.75 ) ) {
        stateMerging = true;
        basePos.stateLocked = true;
        while ( basePos.ry &lt; 0 ) basePos.ry += 360;
        while ( basePos.ry &gt;= 0 ) basePos.ry -= 360;
        optionPos.stateLocked = true;
        while ( optionPos.ry &lt; 0 ) optionPos.ry += 360;
        while ( optionPos.ry &gt;= 0 ) optionPos.ry -= 360;
    }
} else {
    var t = global.timeTickFactor;
    var tSpd = 0.025;
    basePos.x = lerpDT( basePos.x, 0.8, tSpd, t );
    basePos.y = lerpDT( basePos.y, 0, tSpd, t );
    basePos.ry = lerpDT( basePos.ry, 0, 0.02, t );
    baseTwist = lerpDT( baseTwist, 0, 0.02, t );
    if ( ( baseTwist &lt; 30 ) &amp;&amp; ( basePos.ry &gt; -180 ) ) {
        baseSplit += 1.25
    }
    optionPos.x = lerpDT( optionPos.x, 0.8, tSpd, t );
    optionPos.y = lerpDT( optionPos.y, 0, tSpd, t );
    optionPos.ry = lerpDT( optionPos.ry, 0, 0.02, t );
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize base strand

base[0] = instance_create( x, y, dnaRender );
base[1] = instance_create( x, y, dnaRender );
base[1].mirror = true;
for ( var i = 0; i &lt; 2; ++i ) {
    base[i].segments = other.length;
    base[i].visible = false;
}

var tEffects = geneComputeEffects( label, geneBase, length );
baseDesc = geneDescribeEffects( label, tEffects );
ds_map_destroy( tEffects );

baseInfoCount = ds_grid_height( baseDesc );
for ( var i = 0; i &lt; baseInfoCount; ++i ) {
    baseInfo[i] = instance_create( x, y, geneDescriptionBox );
    with ( baseInfo[i] ) {
        data = other.baseDesc;
        index = i;
        visible = false;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize option strand

optionCount = 1;
for ( var i = 0; i &lt; optionCount; ++i ) {
    option[i, 0] = instance_create( x, y, dnaRender );
    option[i, 1] = instance_create( x, y, dnaRender );
    option[i, 1].mirror = true;
    for ( var j = 0; j &lt; 2; ++j ) {
        option[i, j].segments = other.length;
        option[i, j].visible = false;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="76">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update base strand positions

baseX = ( display_get_gui_width( ) * lerp( -0.1, 0.5, basePos.x ) );
baseY = ( display_get_gui_height( ) * lerp( 0.5, 0.6, basePos.y ) );

for ( var i = 0; i &lt; 2; ++i ) {
    base[i].x = baseX;
    base[i].y = baseY;
    base[i].z = basePos.z;
    base[i].rx = basePos.rx;
    base[i].ry = basePos.ry;
    base[i].rz = basePos.rz;
    base[i].twist = baseTwist;
    base[i].split = baseSplit;
}

var tHeight = 0;
for ( var i = 0; i &lt; baseInfoCount; ++i ) {
    if ( i &gt; 0 ) tHeight += 16;
    tHeight += baseInfo[i].height;
}
var px = base[0].radius * 16;
var py = -( tHeight / 2 );
for ( var i = 0; i &lt; baseInfoCount; ++i ) {
    baseInfo[i].x = px;
    baseInfo[i].y = py;
    py += ( baseInfo[i].height + 16 );
}
baseInfoScale = ( length * 9.5 / tHeight );
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update option strand positions

optionX = ( display_get_gui_width( ) * lerp( 1.1, 0.5, optionPos.x ) );
optionY = ( display_get_gui_height( ) * lerp( 0.5, 0.6, optionPos.y ) );

for ( var i = 0; i &lt; optionCount; ++i ) {
    for ( var j = 0; j &lt; 2; ++j ) {
        option[i, j].x = optionX;
        option[i, j].y = optionY;
        option[i, j].z = optionPos.z;
        option[i, j].rx = optionPos.rx;
        option[i, j].ry = -optionPos.ry;
        option[i, j].rz = optionPos.rz;
        option[i, j].twist = optionTwist;
        option[i, j].split = optionSplit;
        if ( i == optionCurrent ) {
            option[i, j].twist = -baseTwist;
            option[i, j].split = baseSplit;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Darken the screen

draw_set_color( c_dkgray );
draw_set_alpha( 1 );
draw_set_blend_mode_ext( bm_dest_color, bm_zero );

draw_rectangle( 0, 0, display_get_gui_width( ), display_get_gui_height( ), false );

draw_set_color( c_white );
draw_set_alpha( 1 );
draw_set_blend_mode( bm_normal );
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Enable 3D

var tw = display_get_gui_width( );
var th = display_get_gui_height( );

d3d_start( );
d3d_set_projection_perspective( 0, th, tw, -th, 0 );
d3d_light_define_ambient( c_white );
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw DNA strands

with ( base[0] ) event_perform( ev_draw, false );
with ( base[1] ) event_perform( ev_draw, false );

for ( var i = 0; i &lt; optionCount; ++i ) {
    with ( option[i, 0] ) event_perform( ev_draw, false );
    with ( option[i, 1] ) event_perform( ev_draw, false );
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw info boxes

d3d_transform_stack_push( );

d3d_set_hidden( false );
d3d_set_depth( -10 );

var tScale = baseInfoScale;
d3d_transform_add_scaling( tScale, tScale, tScale );
d3d_transform_add_rotation_y( 5 );
d3d_transform_add_rotation_z( basePos.rz );
d3d_transform_add_rotation_x( basePos.rx );
d3d_transform_add_translation( baseX, baseY, basePos.z );
for ( var i = 0; i &lt; baseInfoCount; ++i ) {
    with ( baseInfo[i] ) event_perform( ev_draw, false );
}

d3d_transform_stack_pop( );
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Disable 3D

var tw = display_get_gui_width( );
var th = display_get_gui_height( );

d3d_set_projection_ortho( 0, 0, tw, th, 0 );
d3d_end( );
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
