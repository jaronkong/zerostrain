<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Define genomes

label = "player";

geneBase = false;

geneOption = false;
geneOptionCount = 0;

length = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Define base strand

base[0] = noone;
base[1] = noone;

baseDesc = -1
baseInfo = false;
baseInfoCount = 0;

baseX = -0.2;
baseY = 0.5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Clear base strand objects

for ( var i = 0; i &lt; 2; ++i ) {
    with ( base[i] ) instance_destroy( );
}

for ( var i = 0; i &lt; baseInfoCount; ++i ) {
    with ( baseInfo[i] ) instance_destroy( );
}
if ( ds_exists( baseDesc, ds_type_grid ) ) ds_grid_destroy( baseDesc );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize base strand

base[0] = instance_create( x, y, dnaRender );
base[1] = instance_create( x, y, dnaRender );
base[1].mirror = true;
for ( var i = 0; i &lt; 2; ++i ) {
    base[i].segments = other.length;
    base[i].visible = false;
}

var tEffects = geneComputeEffects( label, geneBase, length );
baseDesc = geneDescribeEffects( label, tEffects );
ds_map_destroy( tEffects );

baseInfoCount = ds_grid_height( baseDesc );
for ( var i = 0; i &lt; baseInfoCount; ++i ) {
    baseInfo[i] = instance_create( x, y, geneDescriptionBox );
    with ( baseInfo[i] ) {
        data = other.baseDesc;
        index = i;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="76">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update positions

var px = ( display_get_gui_width( ) * baseX );
var py = ( display_get_gui_height( ) * baseY );

for ( var i = 0; i &lt; 2; ++i ) {
    base[i].x = px;
    base[i].y = py;
    base[i].z = 1000;
    base[i].rx = 0;
    base[i].ry = 0;
    base[i].rz = 0;
    base[i].twist = 5;
    base[i].split = -16;
}
baseR+=1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Darken the screen

draw_set_color( c_dkgray );
draw_set_alpha( 1 );
draw_set_blend_mode_ext( bm_dest_color, bm_zero );

draw_rectangle( 0, 0, display_get_gui_width( ), display_get_gui_height( ), false );

draw_set_color( c_white );
draw_set_alpha( 1 );
draw_set_blend_mode( bm_normal );
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw DNA strands

var tw = display_get_gui_width( );
var th = display_get_gui_height( );

d3d_start( );
d3d_set_projection_perspective( 0, 0, tw, th, 0 );
d3d_light_define_ambient( c_white );

with ( base[0] ) event_perform( ev_draw, false );
with ( base[1] ) event_perform( ev_draw, false );

d3d_set_projection_ortho( 0, 0, tw, th, 0 );
d3d_end( );
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
