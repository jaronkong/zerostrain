<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Define genomes

label = "player";

geneBase = false;

geneOption = false;
geneOptionCount = 0;

length = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Define base strand

base[0] = noone;
base[1] = noone;

baseDesc = -1
baseInfo = false;
baseInfoCount = 0;

//Move here if no input
baseNeutralX = -0.2;
baseNeutralY = 0.5

//Current state
baseX = baseNeutralX;
baseY = baseNeutralY;
baseZ = 1000;

baseRX = 0;
baseRY = 0;
baseRZ = 0;

baseTwist = 5;
baseSplit = -16;

//Misc movement variables
baseRYspd = 10;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Define state

stateLocked = false;
stateMerging = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Clear base strand objects

for ( var i = 0; i &lt; 2; ++i ) {
    with ( base[i] ) instance_destroy( );
}

for ( var i = 0; i &lt; baseInfoCount; ++i ) {
    with ( baseInfo[i] ) instance_destroy( );
}
if ( ds_exists( baseDesc, ds_type_grid ) ) ds_grid_destroy( baseDesc );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Base strand position update

if ( !stateLocked ) {
    var t = global.timeTickFactor;
    
    baseRY += ( baseRYspd * global.dt );
    
    var tHor = 0;
    var tVer = 0;
    if ( gamepad_is_connected( 0 ) ) {
        tHor += gamepad_axis_value( 0, gp_axislh );
        tVer += gamepad_axis_value( 0, gp_axislv );
    } else {
        if ( keyboard_check( vk_left ) ) tHor -= 1;
        if ( keyboard_check( vk_right ) ) tHor += 1;
        if ( keyboard_check( vk_up ) ) tVer -= 1;
        if ( keyboard_check( vk_down ) ) tVer += 1;
    }
    if ( tHor &lt; 0 ) tHor /= 5;
    
    //Update rotation
    baseRX = lerpDT( baseRX, ( tVer * 5 ), 0.1, t );
    baseRYspd = lerpDT( baseRYspd, ( clamp( tHor, -0.1, 0.1 ) * 1500 ), abs( tHor / 5 ), t );
    
    //Update position
    var tSpd = 0.025;
    var tGoalX = lerpDT( baseNeutralX, 0.5, tHor, t );
    var tGoalY = ( baseNeutralY + ( tVer * 0.1 ) );
    baseX = lerpDT( baseX, tGoalX, tSpd, t );
    baseY = lerpDT( baseY, tGoalY, tSpd, t );
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Base strand info fade out

var t = global.timeTickFactor;

var tAlpha = 1;
if ( baseX &gt; 0.1 ) tAlpha = 0;
for ( var i = 0; i &lt; baseInfoCount; ++i ) {
    baseInfo[i].image_alpha = lerpDT( baseInfo[i].image_alpha, tAlpha, 0.0875, t );
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Trigger merge animation

if ( !stateMerging ) {
    if ( baseX &gt; 0.25 ) {
        stateLocked = true;
        stateMerging = true;
        while ( baseRY &lt; 0 ) baseRY += 360;
        while ( baseRY &gt;= 0 ) baseRY -= 360;
    }
} else {
    var t = global.timeTickFactor;
    var tSpd = 0.025;
    baseX = lerpDT( baseX, 0.35, tSpd, t );
    baseY = lerpDT( baseY, 0.5, tSpd, t );
    baseRY = lerpDT( baseRY, 0, 0.02, t );
    baseTwist = lerpDT( baseTwist, 0, 0.02, t );
    if ( ( baseTwist &lt; 30 ) &amp;&amp; ( baseRY &gt; -180 ) ) {
        //var tOffset = ( lerpDT( baseSplit, length*1.2, 0.008, t ) - baseSplit );
        baseSplit += 1.25//min( tOffset, 2 );
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize base strand

base[0] = instance_create( x, y, dnaRender );
base[1] = instance_create( x, y, dnaRender );
base[1].mirror = true;
for ( var i = 0; i &lt; 2; ++i ) {
    base[i].segments = other.length;
    base[i].visible = false;
}

var tEffects = geneComputeEffects( label, geneBase, length );
baseDesc = geneDescribeEffects( label, tEffects );
ds_map_destroy( tEffects );

baseInfoCount = ds_grid_height( baseDesc );
for ( var i = 0; i &lt; baseInfoCount; ++i ) {
    baseInfo[i] = instance_create( x, y, geneDescriptionBox );
    with ( baseInfo[i] ) {
        data = other.baseDesc;
        index = i;
        visible = false;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="76">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update base strand positions

var px = ( display_get_gui_width( ) * baseX );
var py = ( display_get_gui_height( ) * baseY );

for ( var i = 0; i &lt; 2; ++i ) {
    base[i].x = px;
    base[i].y = py;
    base[i].z = baseZ;
    base[i].rx = baseRX;
    base[i].ry = baseRY;
    base[i].rz = baseRZ;
    base[i].twist = baseTwist;
    base[i].split = baseSplit;
}

px = base[0].radius * 12;
py = -length * 6 / 2;
for ( var i = 0; i &lt; baseInfoCount; ++i ) {
    baseInfo[i].x = px;
    baseInfo[i].y = py+160*i;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Darken the screen

draw_set_color( c_dkgray );
draw_set_alpha( 1 );
draw_set_blend_mode_ext( bm_dest_color, bm_zero );

draw_rectangle( 0, 0, display_get_gui_width( ), display_get_gui_height( ), false );

draw_set_color( c_white );
draw_set_alpha( 1 );
draw_set_blend_mode( bm_normal );
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Enable 3D

var tw = display_get_gui_width( );
var th = display_get_gui_height( );

d3d_start( );
d3d_set_projection_perspective( 0, th, tw, -th, 0 );
d3d_light_define_ambient( c_white );
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw DNA strands

with ( base[0] ) event_perform( ev_draw, false );
with ( base[1] ) event_perform( ev_draw, false );
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw info boxes

d3d_transform_stack_push( );

d3d_set_hidden( false );
d3d_set_depth( -10 );

var px = ( display_get_gui_width( ) * baseX );
var py = ( display_get_gui_height( ) * baseY );

var tScale = 1.5;
d3d_transform_add_scaling( tScale, tScale, tScale );
d3d_transform_add_rotation_y( 5 );
d3d_transform_add_rotation_z( baseRZ );
d3d_transform_add_rotation_x( baseRX );
d3d_transform_add_translation( px, py, baseZ );
for ( var i = 0; i &lt; baseInfoCount; ++i ) {
    with ( baseInfo[i] ) event_perform( ev_draw, false );
}

d3d_transform_stack_pop( );
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Disable 3D

var tw = display_get_gui_width( );
var th = display_get_gui_height( );

d3d_set_projection_ortho( 0, 0, tw, th, 0 );
d3d_end( );
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
