<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup

numLayers = 5;
layerOffset = 0.5;

baseParticleSize = 0.1;
sizeFalloff = 5 / numLayers;
baseParticleSpeed = 1;
speedFalloff = 0.8 / numLayers;

for ( var i = 0; i &lt; numLayers; i ++ ) {
    partSystems[ i ] = part_system_create();
    //bloom_attachParticleSystem( system1, BLOOM_DEPTH );
    //distortionGlow_attachParticleSystem( system1 );
    //refraction_attachParticleSystem( system1 );
    
    emitters[ i ] = part_emitter_create( partSystems[ i ] );
    part_emitter_region( partSystems[ i ], emitters[ i ], 
                            0, room_width + ( room_width * layerOffset * i ), 
                            0, room_height + ( room_height * layerOffset * i ), ps_shape_rectangle, ps_distr_linear );

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Emit
var t = global.timeTickFactor;
var tSize = baseParticleSize;
var tSpeed = baseParticleSpeed;

for ( var i = 0; i &lt; numLayers; i ++ ) {
    part_system_position( partSystems[ i ], 
                        -view_xview * ( i * layerOffset ),
                        -view_yview * ( i * layerOffset ) );

    part_type_size(getParticle( "ambBackground" ),tSize,tSize + 0.1,-0.001,0.05);
    part_type_speed(getParticle( "ambBackground" ),tSpeed *t,tSpeed + 0.5 *t,0 *t,0.1 *t);
    part_emitter_burst( partSystems[ i ], emitters[ i ], getParticle( "ambBackground" ), 1 );
    
    tSize += sizeFalloff;
    tSpeed -= speedFalloff;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
